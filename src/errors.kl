PROGRAM errors
%NOLOCKGROUP

%include errors.klt

%include strings.klh
%include errors.klh

BEGIN
END errors
--### Private #####

--### Public #####

ROUTINE CHK_STAT
BEGIN
  IF(rec_stat <> SUCCESS) AND (rec_stat <> EXISTS) THEN
      POST_ERR(rec_stat,'',0, ER_ABORT)
  ENDIF
END CHK_STAT


ROUTINE karelError
-- Error Type:
-- 0 : WARNING
-- 1 : WARNING + SHOWN IN HISTORY
-- 2 : ABORT
------------------------------------------
BEGIN
  CLR_IO_STAT(TPDISPLAY)
  WRITE TPDISPLAY(CR,CR)
  --print message
  WRITE TPDISPLAY(str_parse(errStr, MAX_DISP_LNG),CR,CR)
  --show message
  FORCE_SPMENU(TP_PANEL, SPI_TPUSER, 1)
  --post error
  POST_ERR(stat, '', 0 , errorType)
  
END karelError

ROUTINE SET_UNINIT_I
  VAR
    entry : INTEGER
    status: INTEGER
    uninitINT : ARRAY[1] OF INTEGER
  BEGIN
    SET_VAR(entry,progname,varname,uninitINT[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_I

ROUTINE SET_UNINIT_R
  VAR
    entry : INTEGER
    status: INTEGER
    uninitREL : ARRAY[1] OF REAL
  BEGIN
    SET_VAR(entry,progname,varname,uninitREL[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_R

ROUTINE SET_UNINIT_B
  VAR
    entry : INTEGER
    status: INTEGER
    uninitBOL : ARRAY[1] OF BOOLEAN
  BEGIN
    SET_VAR(entry,progname,varname,uninitBOL[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_B

ROUTINE SET_UNINIT_V
  VAR
    entry : INTEGER
    status: INTEGER
    uninitVEC : ARRAY[1] OF VECTOR
  BEGIN
    SET_VAR(entry,progname,varname,uninitVEC[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_V

ROUTINE SET_UNINIT_F
  VAR
    entry : INTEGER
    status: INTEGER
    uninitFRM : ARRAY[1] OF XYZWPR
  BEGIN
    SET_VAR(entry,progname,varname,uninitFRM[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_F

ROUTINE SET_UNINIT_S
  VAR
    entry : INTEGER
    status: INTEGER
    uninitS : ARRAY[1] OF STRING[64]
  BEGIN
    SET_VAR(entry,progname,varname,uninitS[1],STATUS)
    IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
    IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
  END SET_UNINIT_S

ROUTINE SET_UNI_ARRS
  VAR
    i, entry : INTEGER
    status: INTEGER
    uninitS : ARRAY[1] OF STRING[64]
    var_idx : STRING[64]
  BEGIN
    FOR i=start_i TO stop_i DO
      var_idx = varname + '[' + CHR(i + ORD('0', 1)) + ']'

      SET_VAR(entry,progname,var_idx,uninitS[1],STATUS)
      IF STATUS = 12311 THEN STATUS = 0 ; ENDIF -- 12311 uninitialized data error :-)
      IF STATUS <> 0 THEN POST_ERR(STATUS,'',0,2);ENDIF
    ENDFOR
    
  END SET_UNI_ARRS


